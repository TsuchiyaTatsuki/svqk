:project_root: ../../../../../../../
=== Backend

==== パッケージ構成


[source,txt,subs="attributes"]
----
include::backend-dir-structure.txt[]
----


==== Controller

Controllerは、Web APIのエンドポイントの定義を担うコンポーネントです。
Controllerは、JAX-RSを使用して実装します。

.Controllerの実装
[source,java]
----
include::{project_root}/svqk-back/src/main/java/dev/aulait/svqk/interfaces/hello/HelloController.java[lines="1..21,25..29,37..38"]
----

<.> @PathをControllerクラスに設定します。これにより、このControllerクラスがAPIのエンドポイントしてQuarkusに認識されます。
<.> @RequiredArgsConstructorをControllerクラスに設定します。これにより、private finalフィールドを引数に持つコンストラクタが実装しなくても使用可能になります。
<.> Controllerが使用するServiceをprivate finalフィールドとして定義します。このフィールドはQuarkus起動時にServiceのインスタンスがInjectされます。
<.> Web APIのエンドポイントとなるメソッドを定義します。メソッドにはWeb APIのHTTP Methodを表すアノテーション(@GET、@POST等)を設定します。

[NOTE]
====
Controllerの実装で使用可能な機能の詳細はQuarkusのガイドを参照してください。

* https://quarkus.io/guides/rest[Writing REST Services with Quarkus REST]
====

==== Service

Serviceは、トランザクション制御、トランザクション内の処理フロー制御を担うコンポーネントです。
Serviceは、JTA、CDIを使用して実装します。

.Serviceの実装
[source,java]
----
include::{project_root}/svqk-back/src/main/java/dev/aulait/svqk/domain/hello/HelloService.java[lines="1..14,16..20,22..23"]
----

<.> @ApplicationScopedをServiceクラスに設定します。
<.> @RequiredArgsConstructorをServiceクラスに設定します。これにより、private finalフィールドを引数に持つコンストラクタが実装しなくても使用可能になります。
<.> Serviceが使用するRepositoryをprivate finalフィールドとして定義します。このフィールドはQuarkus起動時にRepositoryのインスタンスがInjectされます。
<.> トランザクション処理ごとにメソッドを定義します。DBへの書き込みを行う処理のメソッドには@Transactinalを設定します。


[NOTE]
====
Quarkusで使用可能なJTAの機能の詳細はQuarkusのドキュメントを参照してください。

* https://quarkus.io/guides/transaction[Using transactions in Quarkus]
====


==== Repository

Repositoryは、DBアクセス、O/Rマッピングを担うコンポーネントです。
Repositoryは、JPA、Spring Data JPAを使用して実装します。

.Repositoryの実装
[source,java]
----
include::{project_root}/svqk-back/src/main/java/dev/aulait/svqk/domain/hello/HelloRepository.java[]
----

<.> JpaRepositoryを継承します。型パラメータにはEntityとEntityのIDの型を指定します。

[NOTE]
====
Quarkusで使用可能なJPA、Spring Data JPAの機能の詳細はQuarkusのドキュメントを参照してください。

* https://quarkus.io/guides/spring-data-jpa[Quarkus Extension for Spring Data API]
* https://quarkus.io/guides/spring-data-jpa#supported-spring-data-jpa-functionalities[Quarkus Supported Spring Data JPA functionalities]
====

